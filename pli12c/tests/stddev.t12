	call func_main
	halt
func_main:
	push_stack_frame 8
# variable x is in stack slot 0
# variable done is in stack slot 1
# variable count is in stack slot 2
# variable sum is in stack slot 3
# variable sumsq is in stack slot 4
# variable mean is in stack slot 5
# variable variance is in stack slot 6
# variable stddev is in stack slot 7
# write
	string_const r0, "Please input a list of real numbers, ending with a negative number\n"
	call_builtin print_string
# assignment
	int_const r0, 0
	store 2, r0
# assignment
	real_const r0, 0.000000
	store 3, r0
# assignment
	real_const r0, 0.000000
	store 4, r0
# read
	call_builtin read_real
	store 0, r0
# assignment
	load r0, 0
	int_const r1, 0
	int_to_real r1, r1
	cmp_lt_real r0, r0, r1
	store 1, r0
# while
label0:
	load r0, 1
	not r0, r0
	branch_on_false r0, label1
# assignment
	load r0, 2
	int_const r1, 1
	add_int r0, r0, r1
	store 2, r0
# assignment
	load r0, 3
	load r1, 0
	add_real r0, r0, r1
	store 3, r0
# assignment
	load r0, 4
	load r1, 0
	load r2, 0
	mul_real r1, r1, r2
	add_real r0, r0, r1
	store 4, r0
# read
	call_builtin read_real
	store 0, r0
# assignment
	load r0, 0
	int_const r1, 0
	int_to_real r1, r1
	cmp_lt_real r0, r0, r1
	store 1, r0
	branch_uncond label0
label1:
# assignment
	load r0, 3
	load r1, 2
	int_to_real r1, r1
	div_real r0, r0, r1
	store 5, r0
# write
	string_const r0, "The mean is "
	call_builtin print_string
# write
	load r0, 5
	call_builtin print_real
# write
	string_const r0, "\n"
	call_builtin print_string
# assignment
	load r0, 4
	load r1, 2
	int_to_real r1, r1
	div_real r0, r0, r1
	load r1, 3
	load r2, 2
	int_to_real r2, r2
	div_real r1, r1, r2
	load r2, 3
	load r3, 2
	int_to_real r3, r3
	div_real r2, r2, r3
	mul_real r1, r1, r2
	sub_real r0, r0, r1
	store 6, r0
# write
	string_const r0, "The variance is "
	call_builtin print_string
# write
	load r0, 6
	call_builtin print_real
# write
	string_const r0, "\n"
	call_builtin print_string
# assignment
# store_regs_up_to 0
	load r0, 6
	call_builtin sqrt
# load_regs_up_to_and_copy 0
# end
	store 7, r0
# write
# store_regs_up_to 0
	string_const r0, "The standard deviation"
	string_const r1, " is "
	call_builtin string_concat
# load_regs_up_to_and_copy 0
# end
	call_builtin print_string
# write
	load r0, 7
	call_builtin print_real
# write
	string_const r0, "\n"
	call_builtin print_string
# write
# store_regs_up_to 0
	string_const r0, "The rounded standard deviation"
	string_const r1, " is "
	call_builtin string_concat
# load_regs_up_to_and_copy 0
# end
	call_builtin print_string
# write
# store_regs_up_to 0
	load r0, 7
	call_builtin round
# load_regs_up_to_and_copy 0
# end
	call_builtin print_int
# write
	string_const r0, "\n"
	call_builtin print_string
# write
# store_regs_up_to 0
	string_const r0, "The truncated \"standard\""
	string_const r1, " deviation is "
	call_builtin string_concat
# load_regs_up_to_and_copy 0
# end
	call_builtin print_string
# write
# store_regs_up_to 0
	load r0, 7
	call_builtin trunc
# load_regs_up_to_and_copy 0
# end
	call_builtin print_int
# write
	string_const r0, "\n"
	call_builtin print_string
# return
	int_const r0, 0
	branch_uncond endfunc_main
endfunc_main:
	pop_stack_frame 8
	return
